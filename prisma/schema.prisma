generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String    @id @default(uuid())
  firstName              String    @default("") @db.VarChar(255)
  lastName               String    @default("") @db.VarChar(255)
  email                  String    @unique
  password               String
  emailVerified          DateTime? @map("email_verified")
  emailVerificationToken String    @unique @db.VarChar(255)
  image                  String?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  books                  Book[]    @relation(map: "readerId")
  Session                Session[]

  @@map("user")
}

model Session {
  id           String   @id @default(uuid())
  userId       String   @unique @map("user_id")
  sessionToken String   @map("session_token") @db.Text
  accessToken  String?  @map("access_token") @db.Text
  expires      DateTime
  user         User?    @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("session")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Book {
  id              String    @id
  readerId        String
  title           String    @db.VarChar(255)
  description     String?   @db.Text
  author          String    @db.VarChar(255)
  isbn            String    @db.Char(13)
  addedAt         DateTime? @default(now()) @db.Timestamp(0)
  publicationDate DateTime  @default(now()) @db.Timestamp(0)
  user            User?      @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "readerId")

  @@map("books")
}
